# -*- coding: utf-8 -*-
"""ques_2_part_1_sub.ipynb

Automatically generated by Colaboratory.

Original file is located at
    https://colab.research.google.com/drive/1LJ_55Rg1TF5-r0TC7Ar17vJdxL4owXDX
"""

#used to work with arrays
import numpy as np
#used to import dataset
import pandas as pd
# used for plotting the dataset
import matplotlib.pyplot as plt
#used for largest value 
import sys
#used for random values
import random
#for doing inverse  of matrices
from numpy.linalg import inv

# dataset upload and using that url I will make a pandas frame
url="https://drive.google.com/file/d/1tRj3p8LM7sevfZbEyC3xK538gD2g2k8a/view?usp=sharing"
url='https://drive.google.com/uc?id=' + url.split('/')[-2]


# test dataset upload and using that url I will make a pandas frame
url_test="https://drive.google.com/file/d/1ee0owgOv_BbS1GEv2gLmyJej_NWlnJ2I/view?usp=sharing"
url_test='https://drive.google.com/uc?id=' + url_test.split('/')[-2]


# the dataset has 100 features, here I am creating the name of the features
name=[]
for i in range (1,101):
  name.append("X"+str(i))
name.append("y")


# error function
def error(X,y,w):
  return np.linalg.norm(np.matmul(X.T,w)-y)**2

#used the dataset url to import dataset
dataframe=pd.read_csv(url,names=name)
n=dataframe.shape[0]
one_array=np.ones(n,dtype=int)
dataframe.insert(0,'X0',one_array)
X=dataframe.iloc[:,:-1].T
y=dataframe.iloc[:,-1]
X=np.array(X,float)
#X dataframe has 2 features and 1000 data frames. “n”  is the number of data points and number of features are stored in “number_of_features”
n=len(X[0])
number_of_features=len(X)
# initialization of the parameter array
w=[]
for i in range(100):
  w.append(0)
w=np.array(w,float)


# finding the parameter with closed form
XX_T=np.dot(X,X.T)
a=np.dot(inv(XX_T),X)
w_ml=np.dot(a,y)
print(w_ml)



# TEst dataset load into dataframe and creating X_TEST and Y_TEST
dataframe_test=pd.read_csv(url_test,names=name)
n_TEST=dataframe_test.shape[0]
one_array=np.ones(n_TEST,dtype=int)
dataframe_test.insert(0,'X0',one_array)
X_TEST=dataframe_test.iloc[:,:-1].T
Y_TEST=dataframe_test.iloc[:,-1]
X_TEST=np.array(X_TEST,float)

print("error on test data")
print(error(X_TEST,Y_TEST,w_ml))